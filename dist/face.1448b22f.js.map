{"mappings":"AAAA,MAAM,QAAQ,SAAS,aAAa,CAAC;AACrC,MAAM,SAAS,SAAS,aAAa,CAAC;AACtC,MAAM,MAAM,OAAO,UAAU,CAAC;AAE9B,MAAM,aAAa,SAAS,aAAa,CAAC;AAC1C,MAAM,UAAU,WAAW,UAAU,CAAC;AACtC,MAAM,kBAAkB,OAAO,OAAO;AAEtC,MAAM,gBAAgB,SAAS,gBAAgB,CAAC;AAChD,QAAQ,GAAG,CAAC;AAGZ,MAAM,WAAW;IACb,MAAM;IACN,OAAO;AACX;AAEA,SAAS,eAAe,CAAC;IACrB,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,aAAa;IACvC,QAAQ,CAAC,KAAK,GAAG,WAAW;AAChC;AAEA,cAAc,OAAO,CAAC,CAAA,QAAS,MAAM,gBAAgB,CAAC,SAAS;AAE/D,eAAe;IACX,MAAM,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;QACrD,OAAO;YAAE,OAAO;YAAM,QAAQ;QAAG;IACrC;IACA,MAAM,SAAS,GAAG;IAClB,MAAM,MAAM,IAAI;IAEhB,oCAAoC;IACpC,OAAO,KAAK,GAAG,MAAM,UAAU;IAC/B,OAAO,MAAM,GAAG,MAAM,WAAW;IACjC,WAAW,KAAK,GAAG,MAAM,UAAU;IACnC,WAAW,MAAM,GAAG,MAAM,WAAW;AACzC;AAEA,eAAe;IACP,wCAAwC;IACxC,MAAM,YAAY;IAElB,+CAA+C;IAC/C,MAAM,QAAQ,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;AAExD;AAEA,eAAe;IACX,MAAM;IAEN,MAAM,QAAQ,MAAM,gBAAgB,cAAc,CAAC,OAC/C,IAAI,gBAAgB,uBAAuB,CAAC;QAAE,WAAW;QAAK,gBAAgB;IAAI;IAGtF,MAAM,OAAO,CAAC;IACd,MAAM,OAAO,CAAC;IACd,sBAAsB;AAC1B;AAEA,eAAe,kBAAkB,IAAI;IACjC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,GAAG;IAExC,IAAI,SAAS,CAAC,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;IAC/C,IAAI,WAAW,GAAG;IAClB,IAAI,SAAS,GAAG;IAEhB,IAAI,UAAU,CAAC,GAAG,GAAG,OAAO;AAEhC;AAEA,eAAe,WAAW,EAAE,KAAK,IAAI,EAAE;IACnC,QAAQ,kBAAkB,GAAG;IAC7B,QAAQ,SAAS,CAAC,GAAG,GAAG,WAAW,KAAK,EAAE,WAAW,MAAM;IAC3D,QAAQ,SAAS,CACb,gBAAgB;IAChB,OACA,KAAK,CAAC,EACN,KAAK,CAAC,EACN,KAAK,KAAK,EACV,KAAK,KAAK,EAEV,cAAc;IACd,KAAK,CAAC,EACN,KAAK,CAAC,EACN,SAAS,IAAI,EACb,SAAS,IAAI;IAGjB,MAAM,QAAQ,KAAK,KAAK,GAAG,SAAS,KAAK;IACzC,MAAM,SAAS,KAAK,MAAM,GAAG,SAAS,KAAK;IAC3C,QAAQ,SAAS,CACb,YACA,KAAK,CAAC,EACN,KAAK,CAAC,EACN,SAAS,IAAI,EACb,SAAS,IAAI,EAEb,KAAK,CAAC,GAAG,AAAC,CAAA,QAAQ,KAAK,KAAK,AAAD,IAAK,GAChC,KAAK,CAAC,GAAG,AAAC,CAAA,SAAS,KAAK,MAAM,AAAD,IAAK,KAClC,OACA;AAER;AAEA,cAAc,IAAI,CAAC;AAEnB,QAAQ,GAAG,CAAC","sources":["assets/js/face-censor.js"],"sourcesContent":["const video = document.querySelector('.webcam');\r\nconst canvas = document.querySelector('.video');\r\nconst ctx = canvas.getContext('2d');\r\n\r\nconst faceCanvas = document.querySelector('.face-detection');\r\nconst faceCtx = faceCanvas.getContext('2d');\r\nconst faceDetectorAPI = window.faceapi;\r\n\r\nconst controlInputs = document.querySelectorAll('.controls input[type=\"range\"]');\r\nconsole.log(controlInputs);\r\n\r\n\r\nconst controls = {\r\n    SIZE: 10,\r\n    SCALE: 1.35,\r\n}\r\n\r\nfunction handleControls(e) {\r\n    const { value, name } = e.currentTarget;\r\n    controls[name] = parseFloat(value);\r\n}\r\n\r\ncontrolInputs.forEach(input => input.addEventListener('input', handleControls));\r\n\r\nasync function startWebcam() {\r\n    const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: { width: 1280, height: 720},\r\n    });\r\n    video.srcObject = stream;\r\n    await video.play();\r\n\r\n    // sizing canvas to be same as video\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    faceCanvas.width = video.videoWidth;\r\n    faceCanvas.height = video.videoHeight;\r\n}\r\n\r\nasync function loadModels() {\r\n        // Use a working CDN path for the models\r\n        const MODEL_URL = 'https://raw.githubusercontent.com/justadudewhohacks/face-api.js/master/weights';\r\n        \r\n        // Load only the tiny face detector model first\r\n        await faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL);\r\n    \r\n}\r\n\r\nasync function detect() {\r\n    await loadModels();\r\n\r\n    const faces = await faceDetectorAPI.detectAllFaces(video, \r\n        new faceDetectorAPI.TinyFaceDetectorOptions({ inputSize: 224, scoreThreshold: 0.5 })\r\n    );\r\n\r\n    faces.forEach(detectAndDrawFace);\r\n    faces.forEach(censorFace);\r\n    requestAnimationFrame(detect);\r\n}\r\n\r\nasync function detectAndDrawFace(face) {\r\n    const { width, height, x, y } = face.box;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    ctx.strokeStyle = 'none';\r\n    ctx.lineWidth = 2;\r\n\r\n    ctx.strokeRect(x, y, width, height);\r\n\r\n}\r\n\r\nasync function censorFace({ box: face }) {\r\n    faceCtx.imageSmoothEnabled = false;\r\n    faceCtx.clearRect(0, 0, faceCanvas.width, faceCanvas.height);\r\n    faceCtx.drawImage(\r\n        // 5 source args\r\n        video,\r\n        face.x,\r\n        face.y,\r\n        face.width,\r\n        face.width,\r\n        \r\n        // 4 draw args\r\n        face.x,\r\n        face.y,\r\n        controls.SIZE, \r\n        controls.SIZE\r\n    );\r\n\r\n    const width = face.width * controls.SCALE;\r\n    const height = face.height * controls.SCALE;\r\n    faceCtx.drawImage(\r\n        faceCanvas,\r\n        face.x,\r\n        face.y,\r\n        controls.SIZE,\r\n        controls.SIZE,\r\n\r\n        face.x - (width - face.width) / 2,\r\n        face.y - (height - face.height) / 2.5,\r\n        width,\r\n        height\r\n    );\r\n}\r\n\r\nstartWebcam().then(detect);\r\n\r\nconsole.log(faceDetectorAPI);"],"names":[],"version":3,"file":"face.1448b22f.js.map","sourceRoot":"/__parcel_source_root/"}